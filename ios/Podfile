# Dynamic resolution of the react_native_pods.rb using Node.js

def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end
  
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')
  
# Setting the platform and defining pods with modular headers
platform :ios, '12.4'
#pod 'Firebase', :modular_headers => true
# pod 'FirebaseCoreInternal', :modular_headers => true
# pod 'GoogleUtilities', :modular_headers => true
# pod 'FirebaseCore', :modular_headers => true
# pod 'FirebaseFirestore', :modular_headers => true
# pod 'FirebaseCoreExtension', :modular_headers => true
# pod 'FirebaseFirestoreInternal', :modular_headers => true



setup_permissions([
  # 'AppTrackingTransparency',
  # 'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  'Camera',
  # 'Contacts',
  # 'FaceID',
  'LocationAccuracy',
  # 'LocationAlways',
  'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  # 'Notifications',
  # 'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])

# Prepare React Native project by invoking the necessary script
prepare_react_native_project!
flipper_version = '0.125.0'  # You can try different versions if this doesn't work

# Handling Flipper based on an environment variable
#flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
flipper_config = FlipperConfiguration.disabled



# Conditional linking of frameworks based on an environment variable
linkage = ENV['USE_FRAMEWORKS']
if linkage
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

# Define the main application target along with its specific configurations
target 'realate' do
  # Automatically link all native modules
  config = use_native_modules!
  use_frameworks! :linkage => :static  
  $RNFirebaseAsStaticFramework = true
  # Retrieve and set default flags
  flags = get_default_flags()

   
  # Use React Native configurations
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled], # Enable Hermes engine
    :fabric_enabled => flags[:fabric_enabled], # Enable Fabric renderer
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.." # Set the absolute path to your application root
  )

  # Define a target for unit tests that inherits settings from the main target
  target 'realateTests' do
    inherit! :complete
    # Pods for testing can be defined here
  end

  

  # Post-install script to apply fixes and workarounds necessary for React Native
  post_install do |installer|
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
      end
    end
    react_native_post_install(installer, config[:reactNativePath], :mac_catalyst_enabled => false)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end

end
